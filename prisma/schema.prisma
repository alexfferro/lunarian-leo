generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  INCOME
  EXPENSE
}

model Transaction {
  id                    String               @id @default(uuid())
  description           String
  amount                Decimal              @db.Decimal(10, 2)
  date                  DateTime
  type                  TransactionType
  userId                String
  category              Category?            @relation(fields: [categoryId], references: [id])
  categoryId            String?
  creditCard            CreditCard?          @relation(fields: [creditCardId], references: [id])
  creditCardId          String?
  installmentPurchase   InstallmentPurchase? @relation(fields: [installmentPurchaseId], references: [id])
  installmentPurchaseId String?
  installmentNumber     Int?
  // recurringExpense      RecurringExpense?    @relation(fields: [recurringExpenseId], references: [id], onDelete: SetNull)
  // recurringExpenseId    String?              @unique
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
}

model InstallmentPurchase {
  id                   String        @id @default(uuid())
  description          String
  totalAmount          Decimal       @db.Decimal(10, 2)
  numberOfInstallments Int
  purchaseDate         DateTime
  userId               String
  creditCard           CreditCard    @relation(fields: [creditCardId], references: [id])
  creditCardId         String
  category             Category      @relation(fields: [categoryId], references: [id])
  categoryId           String
  transactions         Transaction[]
}

model CreditCard {
  id                   String                @id @default(uuid())
  name                 String
  color                String
  limit                Decimal               @db.Decimal(10, 2)
  closingDay           Int
  dueDate              Int
  userId               String
  transactions         Transaction[]
  installmentPurchases InstallmentPurchase[]
  // recurringExpenses    RecurringExpense[]
}

model Category {
  id                   String                @id @default(uuid())
  name                 String
  icon                 String?
  type                 TransactionType
  userId               String
  transactions         Transaction[]
  // recurringExpenses    RecurringExpense[]
  installmentPurchases InstallmentPurchase[]

  @@unique([userId, name, type])
}
